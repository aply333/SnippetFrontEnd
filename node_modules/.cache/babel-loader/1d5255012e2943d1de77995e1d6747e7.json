{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/sharedComponents/leftNav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Nav } from \"rsuite\";\nimport { fetchProjects, setCurrentPanel, fetchCodeSection, setCurrentCode, fetchProjectTags, setCurrentCodeId } from \"../actions/index\";\n\nconst LeftNav = ({\n  fetchProjects,\n  projects,\n  user_data,\n  setCurrentPanel,\n  setView,\n  fetchCodeSection,\n  setCurrentCode,\n  fetchProjectTags,\n  setCurrentCodeId\n}) => {\n  _s();\n\n  useEffect(() => {\n    // if(projects===[]){\n    fetchProjects(user_data.username, user_data.user_id); // }\n  }, []);\n  const contentStyles = {\n    width: \"10rem\",\n    height: \"95vh\",\n    marginLeft: \"0.5rem\"\n  };\n\n  const NavContents = ({\n    active,\n    onSelect,\n    ...props\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Nav, { ...props,\n      vertical: true,\n      activeKey: active,\n      onSelect: onSelect,\n      style: contentStyles,\n      children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n        eventKey: null,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n        eventKey: \"home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(Nav.Item, {\n        eventKey: project.project_id,\n        children: project.project_title\n      }, project.project_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  const [active, setActive] = useState(\"home\");\n\n  function handleSelect(active) {\n    setCurrentCode(\"\");\n    setActive(active);\n    setCurrentPanel(active);\n    setView(active);\n    setCurrentCodeId(\"overview\");\n\n    if (Number.isInteger(active)) {\n      fetchCodeSection(user_data.username, user_data.user_id, active);\n      fetchProjectTags(user_data.username, user_data.user_id, active);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(NavContents, {\n    appearance: \"tabs\",\n    active: active,\n    onSelect: handleSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeftNav, \"RJFxZ+/O28u9eTBCkDliawtcFHA=\");\n\n_c = LeftNav;\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects_data.projects,\n    user_data: state.user_data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProjects,\n  setCurrentPanel,\n  fetchCodeSection,\n  fetchProjectTags,\n  setCurrentCode,\n  setCurrentCodeId\n})(LeftNav);\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftNav\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/sharedComponents/leftNav.jsx"],"names":["React","useState","useEffect","connect","Nav","fetchProjects","setCurrentPanel","fetchCodeSection","setCurrentCode","fetchProjectTags","setCurrentCodeId","LeftNav","projects","user_data","setView","username","user_id","contentStyles","width","height","marginLeft","NavContents","active","onSelect","props","map","project","project_id","project_title","setActive","handleSelect","Number","isInteger","mapStateToProps","state","projects_data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Nav } from \"rsuite\";\nimport {\n  fetchProjects,\n  setCurrentPanel,\n  fetchCodeSection,\n  setCurrentCode,\n  fetchProjectTags,\n  setCurrentCodeId\n} from \"../actions/index\";\n\nconst LeftNav = ({\n  fetchProjects,\n  projects,\n  user_data,\n  setCurrentPanel,\n  setView,\n  fetchCodeSection,\n  setCurrentCode,\n  fetchProjectTags,\n  setCurrentCodeId\n}) => {\n  useEffect(() => {\n    // if(projects===[]){\n    fetchProjects(user_data.username, user_data.user_id);\n    // }\n  }, []);\n\n  const contentStyles = {\n    width: \"10rem\",\n    height: \"95vh\",\n    marginLeft: \"0.5rem\",\n  };\n\n  const NavContents = ({ active, onSelect, ...props }) => {\n    return (\n      <Nav\n        {...props}\n        vertical\n        activeKey={active}\n        onSelect={onSelect}\n        style={contentStyles}\n      >\n        <Nav.Item eventKey={null}> </Nav.Item>\n        <Nav.Item eventKey=\"home\">Home</Nav.Item>\n        {projects.map((project) => (\n          <Nav.Item eventKey={project.project_id} key={project.project_id}>\n            {project.project_title}\n          </Nav.Item>\n        ))}\n      </Nav>\n    );\n  };\n\n  const [active, setActive] = useState(\"home\");\n\n  function handleSelect(active) {\n    setCurrentCode(\"\")\n    setActive(active);\n    setCurrentPanel(active);\n    setView(active);\n    setCurrentCodeId(\"overview\")\n    if (Number.isInteger(active)) {\n      fetchCodeSection( user_data.username, user_data.user_id, active);\n      fetchProjectTags( user_data.username, user_data.user_id, active);\n    }\n  }\n\n  return (\n    <NavContents appearance=\"tabs\" active={active} onSelect={handleSelect} />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects_data.projects,\n    user_data: state.user_data,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProjects,\n  setCurrentPanel,\n  fetchCodeSection,\n  fetchProjectTags,\n  setCurrentCode,\n  setCurrentCodeId\n})(LeftNav);\n"]},"metadata":{},"sourceType":"module"}