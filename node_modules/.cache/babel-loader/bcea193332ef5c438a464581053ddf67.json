{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboar/projects/codeList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Nav } from \"rsuite\";\nimport { connect } from \"react-redux\";\nimport { fetchCodeSection, fetchCodeSnippets, fetchCodeMarkers } from \"../../../actions/index\";\n\nconst CodeList = ({\n  sections,\n  current_panel,\n  user_data,\n  setCurrentCode,\n  fetchCodeSnippets,\n  fetchCodeMarkers,\n  ...props\n}) => {\n  _s();\n\n  const [active, setActive] = useState(1);\n\n  const findSectionIndex = item => {\n    let index = sections.indexOf(item);\n    setCurrentCode(index);\n  }; // const fetchCalls = (active) => {\n  //   fetchCodeMarkers(user_data.name, user_data.user_id, current_panel, active);\n  //   fetchCodeSnippets(user_data.name, user_data.user_id, current_panel, active);\n  // };\n\n\n  async function handleSelect(active) {\n    //  await fetchCalls(active)\n    setActive(active);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Nav, { ...props,\n      vertical: true,\n      activeKey: active,\n      onSelect: handleSelect,\n      appearance: \"subtle\",\n      children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), sections.map(section => /*#__PURE__*/_jsxDEV(Nav.Item, {\n        onClick: () => {\n          findSectionIndex(section);\n        },\n        eventKey: section.code_id,\n        children: section.code_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeList, \"rHKvLjmZtKihLSIZmFR3qtAo2y8=\");\n\n_c = CodeList;\n\nconst mapStateToProps = state => {\n  return {\n    sections: state.projects_data.sections,\n    current_panel: state.application_state.currentPanel,\n    user_data: state.user_data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchCodeSection,\n  fetchCodeSnippets,\n  fetchCodeMarkers\n})(CodeList);\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeList\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboar/projects/codeList.jsx"],"names":["React","useState","useEffect","Nav","connect","fetchCodeSection","fetchCodeSnippets","fetchCodeMarkers","CodeList","sections","current_panel","user_data","setCurrentCode","props","active","setActive","findSectionIndex","item","index","indexOf","handleSelect","map","section","code_id","code_title","mapStateToProps","state","projects_data","application_state","currentPanel"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,wBAJP;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,QADgB;AAEhBC,EAAAA,aAFgB;AAGhBC,EAAAA,SAHgB;AAIhBC,EAAAA,cAJgB;AAKhBN,EAAAA,iBALgB;AAMhBC,EAAAA,gBANgB;AAOhB,KAAGM;AAPa,CAAD,KAQX;AAAA;;AACJ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMe,gBAAgB,GAAIC,IAAD,IAAU;AACjC,QAAIC,KAAK,GAAGT,QAAQ,CAACU,OAAT,CAAiBF,IAAjB,CAAZ;AACAL,IAAAA,cAAc,CAACM,KAAD,CAAd;AACD,GAHD,CAHI,CAQJ;AACA;AACA;AACA;;;AAEA,iBAAeE,YAAf,CAA4BN,MAA5B,EAAmC;AACnC;AACCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA;;AAAA;AAED,sBACE;AAAA,2BACE,QAAC,GAAD,OACMD,KADN;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,EAAEC,MAHb;AAIE,MAAA,QAAQ,EAAEM,YAJZ;AAKE,MAAA,UAAU,EAAC,QALb;AAAA,8BAOE,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGX,QAAQ,CAACY,GAAT,CAAcC,OAAD,iBACZ,QAAC,GAAD,CAAK,IAAL;AACE,QAAA,OAAO,EAAE,MAAM;AACbN,UAAAA,gBAAgB,CAACM,OAAD,CAAhB;AACD,SAHH;AAIE,QAAA,QAAQ,EAAEA,OAAO,CAACC,OAJpB;AAAA,kBAMGD,OAAO,CAACE;AANX;AAAA;AAAA;AAAA;AAAA,cADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAjDD;;GAAMhB,Q;;KAAAA,Q;;AAmDN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACC,aAAN,CAAoBlB,QADzB;AAELC,IAAAA,aAAa,EAAEgB,KAAK,CAACE,iBAAN,CAAwBC,YAFlC;AAGLlB,IAAAA,SAAS,EAAEe,KAAK,CAACf;AAHZ,GAAP;AAKD,CAND;;AAQA,eAAeP,OAAO,CAACqB,eAAD,EAAkB;AACtCpB,EAAAA,gBADsC;AAEtCC,EAAAA,iBAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZC,QAJY,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Nav } from \"rsuite\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchCodeSection,\n  fetchCodeSnippets,\n  fetchCodeMarkers,\n} from \"../../../actions/index\";\n\nconst CodeList = ({\n  sections,\n  current_panel,\n  user_data,\n  setCurrentCode,\n  fetchCodeSnippets,\n  fetchCodeMarkers,\n  ...props\n}) => {\n  const [active, setActive] = useState(1);\n\n  const findSectionIndex = (item) => {\n    let index = sections.indexOf(item);\n    setCurrentCode(index);\n  };\n\n  // const fetchCalls = (active) => {\n  //   fetchCodeMarkers(user_data.name, user_data.user_id, current_panel, active);\n  //   fetchCodeSnippets(user_data.name, user_data.user_id, current_panel, active);\n  // };\n\n  async function handleSelect(active){\n  //  await fetchCalls(active)\n   setActive(active);\n  };\n\n  return (\n    <div>\n      <Nav\n        {...props}\n        vertical\n        activeKey={active}\n        onSelect={handleSelect}\n        appearance=\"subtle\"\n      >\n        <Nav.Item> </Nav.Item>\n        {sections.map((section) => (\n          <Nav.Item\n            onClick={() => {\n              findSectionIndex(section);\n            }}\n            eventKey={section.code_id}\n          >\n            {section.code_title}\n          </Nav.Item>\n        ))}\n      </Nav>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    sections: state.projects_data.sections,\n    current_panel: state.application_state.currentPanel,\n    user_data: state.user_data,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchCodeSection,\n  fetchCodeSnippets,\n  fetchCodeMarkers,\n})(CodeList);\n"]},"metadata":{},"sourceType":"module"}