{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboar/projects/editorMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Nav, Dropdown, Modal, Divider, Tag, TagGroup } from \"rsuite\";\nimport { useForm } from \"react-hook-form\";\nimport InputColor from \"react-input-color\";\n\nconst EditorMenu = ({\n  snippets,\n  setSnippets,\n  selected,\n  editorMode,\n  theme\n}) => {\n  _s();\n\n  const themes = [\"monokai\", \"github\", \"tomorrow\", \"kuroir\", \"twilight\", \"xcode\", \"textmate\", \"solarized dark\", \"solarized light\", \"terminal\"];\n  const modes = [\"javascript\", \"java\", \"python\", \"xml\", \"ruby\", \"sass\", \"markdown\", \"mysql\", \"json\", \"html\", \"handlebars\", \"golang\", \"csharp\", \"coffee\", \"css\"];\n  const [newSnippetMenu, setNewSnippetMenu] = useState({\n    backdrop: false,\n    show: false\n  });\n\n  const open = () => {\n    setNewSnippetMenu({\n      backdrop: true,\n      show: true\n    });\n  };\n\n  const close = () => {\n    setNewSnippetMenu({\n      backdrop: false,\n      show: false\n    });\n  };\n\n  const NewSnippetForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sample Snippet text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexFlow: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"48%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: \"flex\",\n              flexFlow: \"column\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"name for snippet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                height: \"8rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            height: \"12rem\"\n          },\n          vertical: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"48%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TagGroup, {\n            style: {\n              margin: \"0.5 auto\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tag, {\n              color: \"red\",\n              children: \"Tag One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"blue\",\n              children: \"Tag One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"orange\",\n              children: \"Tag One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"green\",\n              children: \"Tag One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"cyan\",\n              children: \"Tag One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"violet\",\n              children: \"Tag One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              width: \"100%\"\n            },\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputColor, {\n            initialValue: \"#ffffff\",\n            placement: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primaryButton\",\n        style: {\n          width: \"6rem\",\n          marginRight: \"0.5rem\"\n        },\n        children: \"Set Snippet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondaryButton\",\n        onClick: e => {\n          e.preventDefault();\n          close();\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  };\n\n  function snippetHandler(location) {\n    open();\n    setSnippets([...snippets, {\n      startRow: location[0].row,\n      startCol: location[0].column,\n      endRow: location[1].row,\n      endCol: location[1].column,\n      className: \"markerTest2\",\n      snippet_id: 1\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      backdrop: newSnippetMenu.backdrop,\n      show: newSnippetMenu.show,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Create New Snippet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NewSnippetForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"row\",\n        justifyContent: \"space-between\",\n        marginTop: \"0.5rem\",\n        marginBottom: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n          onClick: () => {\n            snippetHandler(selected);\n          },\n          children: \"+ Set Snippet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          title: theme,\n          children: themes.map(theme => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          title: editorMode,\n          children: modes.map(mode => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditorMenu, \"SgyV70jefUKC3ZFwcy+YthoS+/U=\");\n\n_c = EditorMenu;\nexport default EditorMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorMenu\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboar/projects/editorMenu.jsx"],"names":["React","useState","Nav","Dropdown","Modal","Divider","Tag","TagGroup","useForm","InputColor","EditorMenu","snippets","setSnippets","selected","editorMode","theme","themes","modes","newSnippetMenu","setNewSnippetMenu","backdrop","show","open","close","NewSnippetForm","display","flexFlow","width","height","margin","marginRight","e","preventDefault","snippetHandler","location","startRow","row","startCol","column","endRow","endCol","className","snippet_id","justifyContent","marginTop","marginBottom","map","mode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Nav, Dropdown, Modal, Divider, Tag, TagGroup } from \"rsuite\";\nimport { useForm } from \"react-hook-form\";\nimport InputColor from \"react-input-color\";\n\nconst EditorMenu = ({ snippets, setSnippets, selected, editorMode, theme }) => {\n  const themes = [\n    \"monokai\",\n    \"github\",\n    \"tomorrow\",\n    \"kuroir\",\n    \"twilight\",\n    \"xcode\",\n    \"textmate\",\n    \"solarized dark\",\n    \"solarized light\",\n    \"terminal\",\n  ];\n\n  const modes = [\n    \"javascript\",\n    \"java\",\n    \"python\",\n    \"xml\",\n    \"ruby\",\n    \"sass\",\n    \"markdown\",\n    \"mysql\",\n    \"json\",\n    \"html\",\n    \"handlebars\",\n    \"golang\",\n    \"csharp\",\n    \"coffee\",\n    \"css\",\n  ];\n\n  const [newSnippetMenu, setNewSnippetMenu] = useState({\n    backdrop: false,\n    show: false,\n  });\n\n  const open = () => {\n      setNewSnippetMenu({\n          backdrop: true,\n          show: true\n      })\n  }\n  \n  const close = () => {\n      setNewSnippetMenu({\n          backdrop: false,\n          show: false\n      })\n  }\n\n  const NewSnippetForm = () => {\n    return (\n        <div>\n            <p>Sample Snippet text.</p>\n            <Divider/>\n            <div style={{display: \"flex\", flexFlow: \"row\"}}>\n                <div style={{width: \"48%\"}}>\n                    <form style={{display:\"flex\", flexFlow:\"column\"}}>\n                        <label>Title: </label>\n                        <input type=\"text\" placeholder=\"name for snippet\"/>\n                        <label>Description:</label>\n                        <textarea style={{height: \"8rem\"}}/>\n                    </form>\n                </div>\n                <Divider style={{height: \"12rem\"}} vertical/>\n                <div style={{width: \"48%\"}}>\n                    <TagGroup style={{margin: \"0.5 auto\"}}>\n                        <Tag color=\"red\">Tag One</Tag>\n                        <Tag color=\"blue\">Tag One</Tag>\n                        <Tag color=\"orange\">Tag One</Tag>\n                        <Tag color=\"green\">Tag One</Tag>\n                        <Tag color=\"cyan\">Tag One</Tag>\n                        <Tag color=\"violet\">Tag One</Tag>\n                    </TagGroup>\n                    <Divider style={{width:\"100%\"}}>or</Divider>\n                    <InputColor\n                        initialValue=\"#ffffff\"\n                        placement=\"right\"\n                    />\n                </div>\n            </div>\n            <Divider/>\n            <button \n                className=\"primaryButton\"\n                style={{width: \"6rem\", marginRight: \"0.5rem\"}}    \n            >\n                Set Snippet\n            </button>\n            <button \n                className=\"secondaryButton\"\n                onClick={e=>{\n                    e.preventDefault()\n                    close()\n                }}>\n                Cancel\n            </button>\n        </div>\n    );\n  };\n\n  function snippetHandler(location) {\n    open()\n    setSnippets([\n      ...snippets,\n      {\n        startRow: location[0].row,\n        startCol: location[0].column,\n        endRow: location[1].row,\n        endCol: location[1].column,\n        className: \"markerTest2\",\n        snippet_id: 1,\n      },\n    ]);\n  }\n\n  return (\n    <>\n      <Modal\n        backdrop={newSnippetMenu.backdrop}\n        show={newSnippetMenu.show}\n      >\n          <Modal.Title>Create New Snippet</Modal.Title>\n          <NewSnippetForm/>\n      </Modal>\n      <div\n        style={{\n          display: \"flex\",\n          flexFlow: \"row\",\n          justifyContent: \"space-between\",\n          marginTop: \"0.5rem\",\n          marginBottom: \"0.5rem\",\n        }}\n      >\n        <Nav>\n          <Nav.Item\n            onClick={() => {     \n              snippetHandler(selected);\n            }}\n          >\n            + Set Snippet\n          </Nav.Item>\n        </Nav>\n        <Nav>\n          <Dropdown title={theme}>\n            {themes.map((theme) => (\n              <Dropdown.Item>{theme}</Dropdown.Item>\n            ))}\n          </Dropdown>\n          <Dropdown title={editorMode}>\n            {modes.map((mode) => (\n              <Dropdown.Item>{mode}</Dropdown.Item>\n            ))}\n          </Dropdown>\n        </Nav>\n      </div>\n    </>\n  );\n};\n\nexport default EditorMenu;\n"]},"metadata":{},"sourceType":"module"}