{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/sharedComponents/bottomNav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Nav, Navbar, Icon } from \"rsuite\";\nimport NewCode from \"./bottomNavContents/newCode\";\nimport NewProject from \"./bottomNavContents/newProject\";\nimport SettingsMenu from \"./bottomNavContents/settingsMenu\";\nimport { postNewProject, postNewCode } from \"../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport { navBarStyles, headerStyle } from \"./bottomNavContents/bottomNavConsts\";\n\nconst BottomNav = ({\n  user_data,\n  postNewProject,\n  currentPanel,\n  postNewCode\n}) => {\n  _s();\n\n  const [codeButton, setCodeButton] = useState(false);\n  useEffect(() => {\n    if (currentPanel === \"home\") {\n      setCodeButton(false);\n    } else {\n      setCodeButton(true);\n    }\n  }, [currentPanel]);\n  const [show, setShow] = useState(false);\n  const [showPr, setShowPr] = useState(false);\n  const [showCd, setShowCd] = useState(false);\n\n  const toggleDrawer = () => {\n    if (show === false) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  };\n\n  const toggleProjectButton = () => {\n    if (showPr === false) {\n      setShowPr(true);\n    } else {\n      setShowPr(false);\n    }\n  };\n\n  const toggleCodeButton = () => {\n    if (showCd === false) {\n      setShowCd(true);\n    } else {\n      setShowCd(false);\n    }\n  };\n\n  const [newProjectData, setNewProjectData] = useState(\"\");\n\n  const postAction = () => {\n    if (newProjectData !== \"\") {\n      postNewProject(user_data.username, user_data.user_id, newProjectData.title);\n    }\n  };\n\n  useEffect(() => {\n    postAction();\n  }, [newProjectData]);\n  const [newCodeData, setCodeData] = useState(\"\");\n\n  const postCodeAction = () => {\n    if (newCodeData !== \"\") {\n      postNewCode(user_data.username, currentPanel, newCodeData);\n    }\n  };\n\n  useEffect(() => {\n    postCodeAction();\n  }, [newCodeData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SettingsMenu, {\n      show: show,\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewProject, {\n      show: showPr,\n      toggleDrawer: toggleProjectButton,\n      setNewProjectData: setNewProjectData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewCode, {\n      show: showCd,\n      toggleDrawer: toggleCodeButton,\n      setCodeData: setCodeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"unstyledList\",\n      style: navBarStyles,\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: headerStyle,\n          children: \"Tools:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            onClick: () => {\n              toggleProjectButton();\n            },\n            children: \"+ Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), codeButton ? /*#__PURE__*/_jsxDEV(Nav.Item, {\n            onClick: () => {\n              toggleCodeButton();\n            },\n            children: \"+ Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          pullRight: true,\n          children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this),\n            onClick: () => {\n              toggleDrawer();\n            },\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BottomNav, \"vSUnJcsQlrIV3G62CQccjuhsUJU=\");\n\n_c = BottomNav;\n\nconst mapStateToProps = state => {\n  return {\n    user_data: state.user_data,\n    currentPanel: state.application_state.currentPanel\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postNewProject,\n  postNewCode\n})(BottomNav);\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomNav\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/sharedComponents/bottomNav.jsx"],"names":["React","useState","useEffect","Nav","Navbar","Icon","NewCode","NewProject","SettingsMenu","postNewProject","postNewCode","connect","navBarStyles","headerStyle","BottomNav","user_data","currentPanel","codeButton","setCodeButton","show","setShow","showPr","setShowPr","showCd","setShowCd","toggleDrawer","toggleProjectButton","toggleCodeButton","newProjectData","setNewProjectData","postAction","username","user_id","title","newCodeData","setCodeData","postCodeAction","mapStateToProps","state","application_state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Nav, Navbar, Icon } from \"rsuite\";\nimport NewCode from \"./bottomNavContents/newCode\";\nimport NewProject from \"./bottomNavContents/newProject\";\nimport SettingsMenu from \"./bottomNavContents/settingsMenu\";\nimport { postNewProject, postNewCode } from \"../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport { navBarStyles, headerStyle } from \"./bottomNavContents/bottomNavConsts\";\n\nconst BottomNav = ({ user_data, postNewProject, currentPanel, postNewCode }) => {\n  const [codeButton, setCodeButton] = useState(false);\n  useEffect(() => {\n    if (currentPanel === \"home\") {\n      setCodeButton(false);\n    } else {\n      setCodeButton(true);\n    }\n  }, [currentPanel]);\n\n  const [show, setShow] = useState(false);\n  const [showPr, setShowPr] = useState(false);\n  const [showCd, setShowCd] = useState(false);\n\n  const toggleDrawer = () => {\n    if (show === false) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  };\n\n  const toggleProjectButton = () => {\n    if (showPr === false) {\n      setShowPr(true);\n    } else {\n      setShowPr(false);\n    }\n  };\n\n  const toggleCodeButton = () => {\n    if (showCd === false) {\n      setShowCd(true);\n    } else {\n      setShowCd(false);\n    }\n  };\n\n  const [newProjectData, setNewProjectData] = useState(\"\");\n  const postAction = () => {\n    if (newProjectData !== \"\") {\n      postNewProject(\n        user_data.username,\n        user_data.user_id,\n        newProjectData.title\n      );\n    }\n  };\n  useEffect(() => {\n    postAction();\n  }, [newProjectData]);\n\n  const [newCodeData, setCodeData] = useState(\"\");\n  const postCodeAction = () => {\n    if (newCodeData !== \"\"){\n      postNewCode(\n        user_data.username,\n        currentPanel,\n        newCodeData\n      )\n    }\n  }\n  useEffect(()=>{\n    postCodeAction()\n  }, [newCodeData])\n\n  return (\n    <>\n      <SettingsMenu show={show} toggleDrawer={toggleDrawer} />\n      <NewProject\n        show={showPr}\n        toggleDrawer={toggleProjectButton}\n        setNewProjectData={setNewProjectData}\n      />\n      <NewCode \n        show={showCd} \n        toggleDrawer={toggleCodeButton} \n        setCodeData={setCodeData}/>\n\n      <Navbar className={\"unstyledList\"} style={navBarStyles}>\n        <Navbar.Header>\n          <h2 style={headerStyle}>Tools:</h2>\n        </Navbar.Header>\n        <Navbar.Body>\n          <Nav>\n            <Nav.Item\n              onClick={() => {\n                toggleProjectButton();\n              }}\n            >\n              + Project\n            </Nav.Item>\n            {codeButton ? (\n              <Nav.Item\n                onClick={() => {\n                  toggleCodeButton();\n                }}\n              >\n                + Code\n              </Nav.Item>\n            ) : null}\n          </Nav>\n          <Nav pullRight>\n            <Nav.Item\n              icon={<Icon icon=\"cog\" />}\n              onClick={() => {\n                toggleDrawer();\n              }}\n            >\n              Settings\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </Navbar>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user_data: state.user_data,\n    currentPanel: state.application_state.currentPanel,\n  };\n};\n\nexport default connect(mapStateToProps, { postNewProject, postNewCode })(BottomNav);\n"]},"metadata":{},"sourceType":"module"}