{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboard/projects/editorPane/NewSnippetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Divider, TagGroup, Tag } from \"rsuite\";\nimport { colorChoices, snippetFormStyle, formContainer } from \"./editorConst\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\n\nconst NewSnippetForm = ({\n  snippetHandler,\n  location,\n  close,\n  tags\n}) => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [snipColor, setSnipColor] = useState(\"yellow\");\n\n  const submitNewSnippet = data => {\n    console.log(data);\n    snippetHandler(location, snipColor);\n    close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        backgroundColor: snipColor\n      },\n      children: \"Sample Snippet text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"48%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submitNewSnippet),\n          style: snippetFormStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"title\",\n            type: \"text\",\n            placeholder: \"name for snippet\",\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            style: {\n              height: \"8rem\"\n            },\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primaryButton\",\n            style: {\n              width: \"6rem\",\n              marginRight: \"0.5rem\",\n              marginTop: \"1rem\"\n            },\n            children: \"Set Snippet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          height: \"15rem\"\n        },\n        vertical: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"48%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TagGroup, {\n          style: {\n            margin: \"0.5 auto\"\n          },\n          children: tags.map(tag => {\n            if (tag.color !== null) {\n              return /*#__PURE__*/_jsxDEV(Tag, {\n                style: {\n                  position: \"relative\"\n                },\n                className: tag.color,\n                children: tag.tag_text\n              }, tag.tag_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 22\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            marginBottom: \" 0.3rem\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"0.3rem\"\n            },\n            children: \"Pick a Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TagGroup, {\n            children: colorChoices.map(color => /*#__PURE__*/_jsxDEV(Tag, {\n              style: {\n                backgroundColor: color.hex,\n                color: \"black\",\n                cursor: \"pointer\"\n              },\n              onClick: () => {\n                setSnipColor(color.colorClass);\n              },\n              children: color.name\n            }, Math.random() * 20, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondaryButton\",\n      style: {\n        marginLeft: \"85%\"\n      },\n      onClick: e => {\n        e.preventDefault();\n        close();\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewSnippetForm, \"QcWW9x8xhd8IF1Q34lPCgj5b0Q8=\", false, function () {\n  return [useForm];\n});\n\n_c = NewSnippetForm;\n\nconst mapStateToProps = state => {\n  return {\n    tags: state.projects_data.tags\n  };\n};\n\nexport default connect(mapStateToProps, {})(NewSnippetForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewSnippetForm\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboard/projects/editorPane/NewSnippetForm.jsx"],"names":["React","useState","Divider","TagGroup","Tag","colorChoices","snippetFormStyle","formContainer","useForm","connect","NewSnippetForm","snippetHandler","location","close","tags","register","handleSubmit","snipColor","setSnipColor","submitNewSnippet","data","console","log","backgroundColor","width","height","marginRight","marginTop","margin","map","tag","color","position","tag_text","tag_id","marginBottom","hex","cursor","colorClass","name","Math","random","marginLeft","e","preventDefault","mapStateToProps","state","projects_data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Divider, TagGroup, Tag } from \"rsuite\";\nimport { colorChoices, snippetFormStyle, formContainer } from \"./editorConst\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\n\nconst NewSnippetForm = ({ snippetHandler, location, close, tags }) => {\n  const { register, handleSubmit } = useForm();\n  const [snipColor, setSnipColor] = useState(\"yellow\");\n  const submitNewSnippet = (data) => {\n    console.log(data);\n    snippetHandler(location, snipColor);\n    close();\n  };\n\n  return (\n    <div>\n      <Divider />\n      <p style={{backgroundColor: snipColor}}>Sample Snippet text.</p>\n      <Divider />\n      <div style={formContainer}>\n        <div style={{ width: \"48%\" }}>\n          <form onSubmit={handleSubmit(submitNewSnippet)} style={snippetFormStyle}>\n            <label>Title: </label>\n            <input name=\"title\" type=\"text\" placeholder=\"name for snippet\" ref={register}/>\n            <label>Description:</label>\n            <textarea name=\"description\" style={{ height: \"8rem\" }} ref={register}/>\n            <button\n              className=\"primaryButton\"\n              style={{ width: \"6rem\", marginRight: \"0.5rem\", marginTop: \"1rem\" }}\n            >\n              Set Snippet\n            </button>\n          </form>\n        </div>\n        <Divider style={{ height: \"15rem\" }} vertical />\n        <div style={{ width: \"48%\" }}>\n          <TagGroup style={{ margin: \"0.5 auto\" }}>\n            {tags.map((tag) => {\n              if(tag.color !== null){\n              return <Tag key={tag.tag_id} style={{position: \"relative\"}} className={tag.color}>{tag.tag_text}</Tag>\n              }\n            })}\n          </TagGroup>\n          <Divider style={{ marginBottom: \" 0.3rem\", width: \"100%\" }}>\n            <h2>or</h2>\n          </Divider>\n          <div>\n            <p style={{ marginBottom: \"0.3rem\" }}>Pick a Color:</p>\n            <TagGroup>\n              {colorChoices.map((color) => (\n                <Tag\n                  key={Math.random() * 20}\n                  style={{\n                    backgroundColor: color.hex,\n                    color: \"black\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => {\n                    setSnipColor(color.colorClass);\n                  }}\n                >\n                  {color.name}\n                </Tag>\n              ))}\n            </TagGroup>\n          </div>\n        </div>\n      </div>\n      <Divider />\n\n      <button\n        className=\"secondaryButton\"\n        style={{marginLeft: \"85%\"}}\n        onClick={(e) => {\n          e.preventDefault();\n          close();\n        }}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return{\n    tags: state.projects_data.tags,\n  }\n}\n\nexport default connect(mapStateToProps,{})(NewSnippetForm);\n"]},"metadata":{},"sourceType":"module"}