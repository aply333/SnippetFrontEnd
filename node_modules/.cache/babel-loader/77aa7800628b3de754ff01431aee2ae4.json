{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboard/projects/editorPane/editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-ambiance\";\nimport EditorMenu from \"./editorMenu\";\nimport { connect } from \"react-redux\";\n\nconst Editor = ({\n  sections,\n  markers,\n  cIndex\n}) => {\n  _s();\n\n  const editorStyle = {\n    height: \"85vh\",\n    width: \"100%\"\n  };\n\n  function onSelection(selection) {\n    let start = {\n      row: selection.anchor.row,\n      column: selection.anchor.column\n    };\n    let end = {\n      row: selection.lead.row,\n      column: selection.lead.column\n    };\n    setSelected([start, end]);\n  }\n\n  const [displayed, setDisplayed] = useState(\" \");\n  useEffect(() => {\n    if (sections !== [] && cIndex !== \"\") {\n      setDisplayed(sections[cIndex.index].raw_code);\n    }\n  }, [cIndex, sections]);\n  const [editorMode, setEditorMode] = useState(\"javascript\");\n  const [theme, setTheme] = useState(\"gitHub\");\n  const [selected, setSelected] = useState();\n  const [snippets, setSnippets] = useState(markers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"0.5rem\",\n      width: \"40%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(EditorMenu, {\n      snippets: snippets,\n      setSnippets: setSnippets,\n      selected: selected,\n      editorMode: `Mode: ${editorMode}`,\n      theme: `Theme: ${theme}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      markers: snippets,\n      onSelectionChange: onSelection,\n      wrapEnabled: true,\n      style: editorStyle,\n      mode: editorMode,\n      value: displayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"AQh/70lQekQBzl5CZEcvV3NRfao=\");\n\n_c = Editor;\n\nconst mapStateToProps = state => {\n  return {\n    sections: state.projects_data.sections,\n    markers: state.projects_data.markers,\n    cIndex: state.application_state.currentCode\n  };\n};\n\nexport default connect(mapStateToProps, {})(Editor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/pages/userdashboard/projects/editorPane/editor.jsx"],"names":["React","useState","useEffect","AceEditor","EditorMenu","connect","Editor","sections","markers","cIndex","editorStyle","height","width","onSelection","selection","start","row","anchor","column","end","lead","setSelected","displayed","setDisplayed","index","raw_code","editorMode","setEditorMode","theme","setTheme","selected","snippets","setSnippets","marginLeft","mapStateToProps","state","projects_data","application_state","currentCode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-ambiance\";\nimport EditorMenu from \"./editorMenu\";\nimport { connect } from \"react-redux\";\n\nconst Editor = ({ sections, markers, cIndex }) => {\n  const editorStyle = {\n    height: \"85vh\",\n    width: \"100%\"\n  };\n\n  function onSelection(selection) {\n    let start = {\n      row: selection.anchor.row,\n      column: selection.anchor.column,\n    };\n    let end = {\n      row: selection.lead.row,\n      column: selection.lead.column,\n    };\n    setSelected([start, end]);\n  }\n\n  const [displayed, setDisplayed] = useState(\" \");\n\n  useEffect(() => {\n    if(sections !== [] && cIndex !== \"\"){\n       setDisplayed(sections[cIndex.index].raw_code); \n    }\n  }, [cIndex, sections]);\n\n  const [editorMode, setEditorMode] = useState(\"javascript\");\n  const [theme, setTheme] = useState(\"gitHub\");\n  const [selected, setSelected] = useState();\n  const [snippets, setSnippets] = useState(markers);\n\n  return (\n    <div style={{ marginLeft: \"0.5rem\" , width: \"40%\"}}>\n      <EditorMenu\n        snippets={snippets}\n        setSnippets={setSnippets}\n        selected={selected}\n        editorMode={`Mode: ${editorMode}`}\n        theme={`Theme: ${theme}`}\n      />\n      <AceEditor\n        markers={snippets}\n        onSelectionChange={onSelection}\n        wrapEnabled={true}\n        style={editorStyle}\n        mode={editorMode}\n        value={displayed}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    sections: state.projects_data.sections,\n    markers: state.projects_data.markers,\n    cIndex: state.application_state.currentCode,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Editor);\n"]},"metadata":{},"sourceType":"module"}