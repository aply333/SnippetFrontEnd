{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/sharedComponents/bottomNav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Nav, Navbar, Icon } from \"rsuite\";\nimport SettingsMenu from \"./bottomNavContents/settingsMenu\";\n\nconst BottomNav = () => {\n  _s();\n\n  const navBarStyles = {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\"\n  };\n  const headerStyle = {\n    display: \"inline-block\",\n    marginTop: \"4%\",\n    marginLeft: \"0.3rem\"\n  };\n  const [show, setShow] = useState(false);\n  const [showPr, setShowPr] = useState(false);\n  const [showCd, setShowCd] = useState(false);\n\n  const toggleDrawer = () => {\n    if (show === false) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  };\n\n  const toggleProjectButton = () => {\n    if (showPr === false) {\n      setShowPr(true);\n    } else {\n      setShowPr(false);\n    }\n  };\n\n  const toggleCodeButton = () => {\n    if (showCd === false) {\n      setShowCd(true);\n    } else {\n      setShowCd(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SettingsMenu, {\n      show: show,\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"unstyledList\",\n      style: navBarStyles,\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: headerStyle,\n          children: \"Tools:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: \"+ Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: \"+ Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          pullRight: true,\n          children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this),\n            onClick: () => {\n              toggleDrawer();\n            },\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BottomNav, \"N4f6ulL5GVCLdHZnf2oM3J6CSnk=\");\n\n_c = BottomNav;\nexport default BottomNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomNav\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/SnippetTool/SnippetFrontend/snippetFront/src/sharedComponents/bottomNav.jsx"],"names":["React","useState","Nav","Navbar","Icon","SettingsMenu","BottomNav","navBarStyles","position","bottom","width","headerStyle","display","marginTop","marginLeft","show","setShow","showPr","setShowPr","showCd","setShowCd","toggleDrawer","toggleProjectButton","toggleCodeButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,QAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,UADS;AAEnBC,IAAAA,MAAM,EAAE,CAFW;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAArB;AAMA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE,cADS;AAElBC,IAAAA,SAAS,EAAE,IAFO;AAGlBC,IAAAA,UAAU,EAAE;AAHM,GAApB;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMoB,YAAY,GAAG,MAAM;AACzB,QAAIN,IAAI,KAAK,KAAb,EAAoB;AAClBC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAND;;AAQA,QAAMM,mBAAmB,GAAG,MAAM;AAChC,QAAIL,MAAM,KAAK,KAAf,EAAsB;AACpBC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAEK;AACHA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAND;;AAQA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,QAAIJ,MAAM,KAAK,KAAf,EAAqB;AACnBC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAEK;AACHA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEL,IAApB;AAA0B,MAAA,YAAY,EAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,cAAnB;AAAmC,MAAA,KAAK,EAAEd,YAA1C;AAAA,8BACE,QAAC,MAAD,CAAQ,MAAR;AAAA,+BACE;AAAI,UAAA,KAAK,EAAEI,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD,CAAQ,IAAR;AAAA,gCACE,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,GAAD;AAAK,UAAA,SAAS,MAAd;AAAA,iCACE,QAAC,GAAD,CAAK,IAAL;AACE,YAAA,IAAI,eAAE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADR;AAEE,YAAA,OAAO,EAAE,MAAM;AACbU,cAAAA,YAAY;AACb,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA2BD,CApED;;GAAMf,S;;KAAAA,S;AAsEN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Nav, Navbar, Icon } from \"rsuite\";\nimport SettingsMenu from \"./bottomNavContents/settingsMenu\";\n\nconst BottomNav = () => {\n  const navBarStyles = {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n  };\n\n  const headerStyle = {\n    display: \"inline-block\",\n    marginTop: \"4%\",\n    marginLeft: \"0.3rem\",\n  };\n\n  const [show, setShow] = useState(false);\n  const [showPr, setShowPr] = useState(false);\n  const [showCd, setShowCd] = useState(false);\n\n  const toggleDrawer = () => {\n    if (show === false) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  };\n\n  const toggleProjectButton = () => {\n    if (showPr === false) {\n      setShowPr(true)\n    }else{\n      setShowPr(false)\n    }\n  }\n\n  const toggleCodeButton = () => {\n    if (showCd === false){\n      setShowCd(true)\n    }else{\n      setShowCd(false)\n    }\n  }\n\n  return (\n    <>\n      <SettingsMenu show={show} toggleDrawer={toggleDrawer}/>\n\n      <Navbar className={\"unstyledList\"} style={navBarStyles}>\n        <Navbar.Header>\n          <h2 style={headerStyle}>Tools:</h2>\n        </Navbar.Header>\n        <Navbar.Body>\n          <Nav>\n            <Nav.Item>+ Project</Nav.Item>\n            <Nav.Item>+ Code</Nav.Item>\n          </Nav>\n          <Nav pullRight>\n            <Nav.Item\n              icon={<Icon icon=\"cog\" />}\n              onClick={() => {\n                toggleDrawer();\n              }}\n            >\n              Settings\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </Navbar>\n    </>\n  );\n};\n\nexport default BottomNav;\n"]},"metadata":{},"sourceType":"module"}